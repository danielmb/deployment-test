name: Build
on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: self-hosted
    env:
      deploy-path: C:\test\www\${{ github.run_id}}-${{ github.run_number }}-${{ github.run_attempt }}
      pm2cmd: C:\ProgramData\npm\npm\pm2.cmd

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      # - name: HashFiles
      #   shell: pwsh
      #   id: hash
      #   run: |
      #     echo "::set-output name=hash::${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.ts', '**.tsx') }}"
      - name: HashFiles
        id: hashts
        run: |
          echo "::set-output name=hashts::${{ hashFiles('**.ts', '**.tsx') }}"

      - name: HashPackage
        id: hashpackage
        run: |
          echo "::set-output name=hashpackage::${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}"
      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: |
            .next/cache
          enableCrossOsArchive: true
          key: ${{ runner.os }}-nextjs-${{ steps.hashpackage.outputs.hashpackage }}-${{ steps.hashts.outputs.hashts }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Save cache
        uses: actions/cache/save@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ steps.hashpackage.outputs.hashpackage }}-${{ steps.hashts.outputs.hashts }}
          enableCrossOsArchive: true
          # - name: Download artifact
      #   uses: actions/download-artifact@v4

      #   with:
      #     name: build

      - name: copy files
        env:
          DEPLOY_PATH: ${{ env.deploy-path }}
        run: |
          New-Item -ItemType Directory -Force -Path $env:DEPLOY_PATH
          Copy-Item -Path .\* -Destination $env:DEPLOY_PATH -Recurse

      # - name: Install dependencies
      #   working-directory: ${{ env.deploy-path }}
      #   run: |
      #     npm install

      # - name: Start server
      #   working-directory: ${{ env.deploy-path }}
      #   run: |
      #     ${{ env.pm2cmd }} startOrRestart ecosystem.config.js
