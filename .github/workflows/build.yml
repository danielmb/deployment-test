name: Build
on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: windows-latest
    outputs:
      hash: ${{ steps.hash.outputs.hash }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: HashFiles
        shell: pwsh
        id: hash
        run: |
          echo "::set-output name=hash::${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.ts', '**.tsx') }}"

      - name: Dir
        run: |
          dir
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache

          key: ${{ runner.os }}-nextjs-${{ steps.hash.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: build-${{ github.sha }}
      #     retention-days: 1
      #     overwrite: true
      #     path: |
      #       .
      #       .next

  deploy:
    env:
      deploy-path: C:\test\www\${{ github.run_id}}-${{ github.run_number }}-${{ github.run_attempt }}
      pm2cmd: C:\ProgramData\npm\npm\pm2.cmd
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dir
        run: |
          dir
      - name: Get from cache
        uses: actions/cache/save@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ needs.build.outputs.hash }}

          # - name: Download artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: build

      - name: copy files
        env:
          DEPLOY_PATH: ${{ env.deploy-path }}
        run: |
          New-Item -ItemType Directory -Force -Path $env:DEPLOY_PATH
          Copy-Item -Path .\* -Destination $env:DEPLOY_PATH -Recurse

      # - name: Install dependencies
      #   working-directory: ${{ env.deploy-path }}
      #   run: |
      #     npm install

      # - name: Start server
      #   working-directory: ${{ env.deploy-path }}
      #   run: |
      #     ${{ env.pm2cmd }} startOrRestart ecosystem.config.js
